{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_auditor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "name": "TransactionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "name": "TransactionHashStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "name": "TransactionVerified",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "auditor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_txHash",
          "type": "bytes32"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingTxHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_txHash",
          "type": "bytes32"
        }
      ],
      "name": "storeTransactionHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "verifiedTxs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_txHash",
          "type": "bytes32"
        }
      ],
      "name": "verifyTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa2a706cf799a9f0b7acba5ced4c1a38cd349f871f9ee383e850fac6a73111635",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "778286",
    "logsBloom": "0x
    "blockHash": "0xa225b255399600c2596f5b807d17af82b74f2527d2e1c31e3c5a10d73d69d37b",
    "transactionHash": "0xa2a706cf799a9f0b7acba5ced4c1a38cd349f871f9ee383e850fac6a73111635",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "778286",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
  ],
  "numDeployments": 1,
  "solcInputHash": "4371182f1cbaf869755627d6eb804672",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_auditor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"TransactionHashStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"TransactionVerified\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auditor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txHash\",\"type\":\"bytes32\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txHash\",\"type\":\"bytes32\"}],\"name\":\"storeTransactionHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedTxs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_txHash\",\"type\":\"bytes32\"}],\"name\":\"verifyTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SecureTransactionGuard.sol\":\"SecureTransactionGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"contracts/SecureTransactionGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract SecureTransactionGuard is ReentrancyGuard {\\n    \\n    address public owner;\\n    address public auditor;\\n    mapping(address => bytes32) public pendingTxHash;\\n    mapping(bytes32 => bool) public verifiedTxs;\\n    \\n    event TransactionHashStored(address indexed user, bytes32 txHash);\\n    event TransactionVerified(address indexed user, bytes32 txHash);\\n    event TransactionExecuted(address indexed user, bytes32 txHash);\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Not authorized\\\");\\n        _;\\n    }\\n\\n    modifier onlyAuditor() {\\n        require(msg.sender == auditor, \\\"Not authorized\\\");\\n        _;\\n    }\\n\\n    constructor(address _auditor) {\\n        require(_auditor != address(0), \\\"Invalid auditor address\\\");\\n        owner = msg.sender;\\n        auditor = _auditor;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return owner;\\n    }\\n\\n    // Step 1: Store the transaction hash before signing\\n    function storeTransactionHash(bytes32 _txHash) external {\\n        require(pendingTxHash[msg.sender] == bytes32(0), \\\"Pending transaction already exists\\\");\\n        pendingTxHash[msg.sender] = _txHash;\\n        emit TransactionHashStored(msg.sender, _txHash);\\n    }\\n\\n    // Step 2: Auditor must verify the transaction before signing\\n    function verifyTransaction(address user, bytes32 _txHash) external onlyAuditor {\\n        require(pendingTxHash[user] != bytes32(0), \\\"No pending transaction\\\");\\n        require(pendingTxHash[user] == _txHash, \\\"Transaction hash mismatch\\\");\\n        verifiedTxs[_txHash] = true;\\n        emit TransactionVerified(user, _txHash);\\n    }\\n\\n    // Step 3: Execute only if verified\\n    function executeTransaction(bytes32 _txHash) external nonReentrant {\\n        require(verifiedTxs[_txHash], \\\"Transaction not verified\\\");\\n        \\n        // Here, the actual transaction execution logic should be implemented\\n        \\n        emit TransactionExecuted(msg.sender, _txHash);\\n        \\n        // Ensure successful execution before deleting pending data\\n        if (verifiedTxs[_txHash]) {\\n            delete pendingTxHash[msg.sender];\\n            delete verifiedTxs[_txHash];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2b1400d8eba5caa003346e263099b12bb04112772a5987850f8583f52cacb39\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000e3738038062000e378339818101604052810190620000379190620001a4565b6001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a89062000237565b60405180910390fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000259565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016c826200013f565b9050919050565b6200017e816200015f565b81146200018a57600080fd5b50565b6000815190506200019e8162000173565b92915050565b600060208284031215620001bd57620001bc6200013a565b5b6000620001cd848285016200018d565b91505092915050565b600082825260208201905092915050565b7f496e76616c69642061756469746f722061646472657373000000000000000000600082015250565b60006200021f601783620001d6565b91506200022c82620001e7565b602082019050919050565b60006020820190508181036000830152620002528162000210565b9050919050565b610bce80620002696000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063893d20e81161005b578063893d20e8146101275780638da5cb5b14610145578063c69ed5f214610163578063debec43c1461017f57610088565b80630f6ec14c1461008d578063249e0963146100bd578063305227ae146100d95780633ec045a614610109575b600080fd5b6100a760048036038101906100a29190610757565b61019b565b6040516100b4919061079f565b60405180910390f35b6100d760048036038101906100d29190610757565b6101bb565b005b6100f360048036038101906100ee9190610818565b6102d4565b6040516101009190610854565b60405180910390f35b6101116102ec565b60405161011e919061087e565b60405180910390f35b61012f610312565b60405161013c919061087e565b60405180910390f35b61014d61033c565b60405161015a919061087e565b60405180910390f35b61017d60048036038101906101789190610757565b610362565b005b61019960048036038101906101949190610899565b6104b0565b005b60046020528060005260406000206000915054906101000a900460ff1681565b6000801b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461023f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102369061095c565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f2187d57ceb99c71dd650aff48073767077db65beeda045dbbad4700ff5ad2b68826040516102c99190610854565b60405180910390a250565b60036020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61036a6106c3565b6004600082815260200190815260200160002060009054906101000a900460ff166103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c1906109c8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fdd4b9b318b98162cb1e7b52752a3fd110d5b7966f3b50884c1cd3bd04058e5c7826040516104109190610854565b60405180910390a26004600082815260200190815260200160002060009054906101000a900460ff16156104a557600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556004600082815260200190815260200160002060006101000a81549060ff02191690555b6104ad610712565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790610a34565b60405180910390fd5b6000801b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610aa0565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90610b0c565b60405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fef9908b13e5d157a0b00f730e8a5acbe1ee9fa8c1c08a660dbaa018673a9241d826040516106b79190610854565b60405180910390a25050565b600260005403610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90610b78565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b6000819050919050565b61073481610721565b811461073f57600080fd5b50565b6000813590506107518161072b565b92915050565b60006020828403121561076d5761076c61071c565b5b600061077b84828501610742565b91505092915050565b60008115159050919050565b61079981610784565b82525050565b60006020820190506107b46000830184610790565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e5826107ba565b9050919050565b6107f5816107da565b811461080057600080fd5b50565b600081359050610812816107ec565b92915050565b60006020828403121561082e5761082d61071c565b5b600061083c84828501610803565b91505092915050565b61084e81610721565b82525050565b60006020820190506108696000830184610845565b92915050565b610878816107da565b82525050565b6000602082019050610893600083018461086f565b92915050565b600080604083850312156108b0576108af61071c565b5b60006108be85828601610803565b92505060206108cf85828601610742565b9150509250929050565b600082825260208201905092915050565b7f50656e64696e67207472616e73616374696f6e20616c7265616479206578697360008201527f7473000000000000000000000000000000000000000000000000000000000000602082015250565b60006109466022836108d9565b9150610951826108ea565b604082019050919050565b6000602082019050818103600083015261097581610939565b9050919050565b7f5472616e73616374696f6e206e6f742076657269666965640000000000000000600082015250565b60006109b26018836108d9565b91506109bd8261097c565b602082019050919050565b600060208201905081810360008301526109e1816109a5565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610a1e600e836108d9565b9150610a29826109e8565b602082019050919050565b60006020820190508181036000830152610a4d81610a11565b9050919050565b7f4e6f2070656e64696e67207472616e73616374696f6e00000000000000000000600082015250565b6000610a8a6016836108d9565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b7f5472616e73616374696f6e2068617368206d69736d6174636800000000000000600082015250565b6000610af66019836108d9565b9150610b0182610ac0565b602082019050919050565b60006020820190508181036000830152610b2581610ae9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610b62601f836108d9565b9150610b6d82610b2c565b602082019050919050565b60006020820190508181036000830152610b9181610b55565b905091905056fea264697066735822122092ef9f193d55280a9945c6e8fb8d1c48ce2af7502697667f1b29ad7be707859264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063893d20e81161005b578063893d20e8146101275780638da5cb5b14610145578063c69ed5f214610163578063debec43c1461017f57610088565b80630f6ec14c1461008d578063249e0963146100bd578063305227ae146100d95780633ec045a614610109575b600080fd5b6100a760048036038101906100a29190610757565b61019b565b6040516100b4919061079f565b60405180910390f35b6100d760048036038101906100d29190610757565b6101bb565b005b6100f360048036038101906100ee9190610818565b6102d4565b6040516101009190610854565b60405180910390f35b6101116102ec565b60405161011e919061087e565b60405180910390f35b61012f610312565b60405161013c919061087e565b60405180910390f35b61014d61033c565b60405161015a919061087e565b60405180910390f35b61017d60048036038101906101789190610757565b610362565b005b61019960048036038101906101949190610899565b6104b0565b005b60046020528060005260406000206000915054906101000a900460ff1681565b6000801b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461023f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102369061095c565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f2187d57ceb99c71dd650aff48073767077db65beeda045dbbad4700ff5ad2b68826040516102c99190610854565b60405180910390a250565b60036020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61036a6106c3565b6004600082815260200190815260200160002060009054906101000a900460ff166103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c1906109c8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fdd4b9b318b98162cb1e7b52752a3fd110d5b7966f3b50884c1cd3bd04058e5c7826040516104109190610854565b60405180910390a26004600082815260200190815260200160002060009054906101000a900460ff16156104a557600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556004600082815260200190815260200160002060006101000a81549060ff02191690555b6104ad610712565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053790610a34565b60405180910390fd5b6000801b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610aa0565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90610b0c565b60405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fef9908b13e5d157a0b00f730e8a5acbe1ee9fa8c1c08a660dbaa018673a9241d826040516106b79190610854565b60405180910390a25050565b600260005403610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90610b78565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b6000819050919050565b61073481610721565b811461073f57600080fd5b50565b6000813590506107518161072b565b92915050565b60006020828403121561076d5761076c61071c565b5b600061077b84828501610742565b91505092915050565b60008115159050919050565b61079981610784565b82525050565b60006020820190506107b46000830184610790565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e5826107ba565b9050919050565b6107f5816107da565b811461080057600080fd5b50565b600081359050610812816107ec565b92915050565b60006020828403121561082e5761082d61071c565b5b600061083c84828501610803565b91505092915050565b61084e81610721565b82525050565b60006020820190506108696000830184610845565b92915050565b610878816107da565b82525050565b6000602082019050610893600083018461086f565b92915050565b600080604083850312156108b0576108af61071c565b5b60006108be85828601610803565b92505060206108cf85828601610742565b9150509250929050565b600082825260208201905092915050565b7f50656e64696e67207472616e73616374696f6e20616c7265616479206578697360008201527f7473000000000000000000000000000000000000000000000000000000000000602082015250565b60006109466022836108d9565b9150610951826108ea565b604082019050919050565b6000602082019050818103600083015261097581610939565b9050919050565b7f5472616e73616374696f6e206e6f742076657269666965640000000000000000600082015250565b60006109b26018836108d9565b91506109bd8261097c565b602082019050919050565b600060208201905081810360008301526109e1816109a5565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610a1e600e836108d9565b9150610a29826109e8565b602082019050919050565b60006020820190508181036000830152610a4d81610a11565b9050919050565b7f4e6f2070656e64696e67207472616e73616374696f6e00000000000000000000600082015250565b6000610a8a6016836108d9565b9150610a9582610a54565b602082019050919050565b60006020820190508181036000830152610ab981610a7d565b9050919050565b7f5472616e73616374696f6e2068617368206d69736d6174636800000000000000600082015250565b6000610af66019836108d9565b9150610b0182610ac0565b602082019050919050565b60006020820190508181036000830152610b2581610ae9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610b62601f836108d9565b9150610b6d82610b2c565b602082019050919050565b60006020820190508181036000830152610b9181610b55565b905091905056fea264697066735822122092ef9f193d55280a9945c6e8fb8d1c48ce2af7502697667f1b29ad7be707859264736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/SecureTransactionGuard.sol:SecureTransactionGuard",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 71,
        "contract": "contracts/SecureTransactionGuard.sol:SecureTransactionGuard",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/SecureTransactionGuard.sol:SecureTransactionGuard",
        "label": "auditor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 77,
        "contract": "contracts/SecureTransactionGuard.sol:SecureTransactionGuard",
        "label": "pendingTxHash",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 81,
        "contract": "contracts/SecureTransactionGuard.sol:SecureTransactionGuard",
        "label": "verifiedTxs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}